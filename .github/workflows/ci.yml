name: CI

on:
  push:
    branches: [ "**" ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  pip-smoke:
    name: Pip smoke (all OS)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build distributions
        run: |
          python -m pip install --upgrade pip build twine
          python -m build
          python -m twine check dist/*

      - name: Install wheel and smoke test (pip)
        run: |
          python -m pip install --upgrade dist/*.whl
          # CLI via module to avoid PATH differences across OS
          python -m context_engine_mcp.install --version
          python -m context_engine_mcp.install install --target cn
          python -m context_engine_mcp.install uninstall

  pipx-smoke:
    name: Pipx smoke (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build distributions
        run: |
          python -m pip install --upgrade pip build twine pipx
          python -m build
          python -m twine check dist/*

      - name: Install with pipx and smoke test
        shell: bash
        run: |
          python -m pipx install dist/*.whl
          APP=$(python - <<'PY'
import json, subprocess
j=json.loads(subprocess.check_output(['python','-m','pipx','list','--json']))
print(j['venvs']['context-engine-mcp']['metadata']['main_package']['app_paths'][0]['__Path__'])
PY
)
          "$APP" --version
          "$APP" install --target cn
          "$APP" uninstall
          python -m pipx uninstall context-engine-mcp
