name: Publish (TestPyPI â†’ PyPI)

on:
  release:
    types: [published]

jobs:
  build:
    name: Build dists
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip build

      - name: Verify tag matches package version
        run: |
          TAG="${GITHUB_REF_NAME}"
          # Expect tags like v1.0.7
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag must be like v1.2.3; got $TAG" >&2
            exit 1
          fi
          PKG_VER=$(python - <<'PY'
from pathlib import Path
ns = {}
exec(Path('src/context_engine_mcp/__version__.py').read_text(), ns)
print(ns.get('__version__',''))
PY
)
          echo "Tag: $TAG, __version__: $PKG_VER"
          if [[ "v${PKG_VER}" != "$TAG" ]]; then
            echo "Version mismatch: tag $TAG vs __version__ $PKG_VER" >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    if: github.event.release.prerelease == true
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Publish (TestPyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Publish (PyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

